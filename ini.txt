征稿\{
请在洛谷（luogu.com.cn）私信审核员sundingjia（uid：704139）。。

PM：Chinese_good_FaFa（uid：1240580）

支持 $\LaTeX$ 与 Markdown，**不要用h1标题。**

内容不限，合理、健康即可。

如需署名请自行加上，不支持代加。
\}

2025年7月14日期 | 都是不审题干的好事第一章\{
~~别说我写作不好，不喜勿喷。~~

## 背景介绍

本小说讲述了一连串的逛东省福扇市楠骸区贵橙街道贵姜第一初级中学的奇妙故事。

## 人物介绍

**薛小树**：名字由学习奥数 `xuexiaoshu` 得来，马虎至极，OIer，初三学生，性格迷糊却常有惊人灵感，书包永远乱糟糟的像他的思路一样。

**辛希雪**：名字由信息学谐音得来，初二 OIer，但水平达到高三。

**刘峰蓝**：刘峰蓝老师在信息学教育领域有着丰富的经验和卓越的成就。她带领的学生在国内外各项信息学竞赛中取得了优异的成绩，为学校赢得了多项荣誉。

**何纯赢**：何纯赢是贵姜一中的一名优秀教师，担任班主任职务，并负责数学教学工作。何纯赢老师在教育领域有着丰富的经验和深厚的学术背景。她不仅关注学生的学业进步，还注重培养学生的综合素质和个性发展。

**叶赢依**：叶赢依是佛山市贵橙街道教育系统的资深英语教师，现任教于贵姜第一初级中学，担任初中英语教学工作。

## 正文

**7 月 6 日 8:00 PM**

办公室里，传来一阵刘峰蓝那严厉的训斥声……

**“薛小树！你怎么搞的？啊？这么简单的问题都能错？”**

让我们来看一下题目：

> 圆内接四边形 $ABCD$ 中，$AB=3$，$BC=5$，$CD=7$，$∠ABC=60°$，求 $AD$ 长度（精确到小数点后两位）

哎，真是可怜，看看薛小树误读了什么吧，他把“圆内接” 看成“既有外接圆又有内切圆”，将角度条件理解为“存在至少一个 $60$° 角”。

你说，这怎么可能呢！可薛小树就是这么傻乎乎的，当然，那道题目却成为了他那道命运的几何题。

在老师一直骂他的时候，突然，老师看了看薛小树的答案，停住了。

> - 根据圆外切性质写出方程：$\frac{1}{2}(3+7) = \frac{1}{2}(5+x) \Rightarrow x=5$
> - 代入余弦定理：
>   $$ AC^2 = 3^2+5^2-2×3×5×\cos60° = 19 $$
>   $$ \cos∠ADC = \frac{5^2+7^2-19}{2×5×7} ≈ 0.757 ⇒ ∠ADC ≈ 40.8° $$
>   $$ ∠ABC + ∠ADC ≈ 100.8° ≠ 180° $$

辛希雪走进了办公室，“报告老师 —— 薛小树有一个惊天发现！”

老师叹了一口气，说，“哎，什么发现，你看他那次模拟考他写了什么！” 说罢，便把卷子递给了辛希雪。

辛希雪看了许久，说：“老师！这是人才啊！”

薛小树说：“哎，当时我就是灵光一现，想‘也许存在某种特殊比例关系能使四边形同时满足双圆条件’，就发现称四边形为 θ- 双圆四边形，若存在实数 $θ∈(0,π)$ 使得 $\frac{a+c}{b+d} = \frac{\sin(\theta/2)}{\cos(\theta/2)}$。”

好家伙，看一看推导过程：

> 1. 建立含参方程：
>$$\frac{3+7}{5+x} = \tan\frac{\theta}{2}$$
>$$\frac{10}{5+x} = t \quad (t=\tan\frac{\theta}{2})$$
>
> 3. 运用双圆四边形对角关系：$\cosθ = \frac{(a^2+d^2-b^2-c^2)^2 - 4(ad+bc)^2 + 16abcd}{8abcd}$
>
> 4. 得到四次方程：$x^4 - (2t^2+8)x^3 + (t^4-16t^2+46)x^2 - (8t^4-32t^2+40)x + (16t^4-64t^2+25) = 0$

何纯赢走了进来，说：“我证明一下。”

**注**：证明部分由 AI 生成。

**引理 1**：对于任何 θ- 双圆四边形，面积可表示为：$S = \frac{1}{4} \sqrt{(a^2+b^2+c^2+d^2)^2 - 8abcd\cosθ - 2(a^4+b^4+c^4+d^4)}$

**证明过程**：

1. 设外接圆半径 R，由正弦定理：$a=2R\sinα, \ b=2R\sinβ, \ c=2R\sinγ, \ d=2R\sinδ$

2. 根据圆内接性质：$α+γ=β+δ=π$

3. 引入内切圆条件：$\tan\frac{α}{2} + \tan\frac{γ}{2} = \tan\frac{β}{2} + \tan\frac{δ}{2}$

4. 通过万能公式转换：$\frac{\sinα}{1+\cosα} + \frac{\sinγ}{1+\cosγ} = \frac{2t}{1-t^2}$

5. 最终导出面积公式：$S = R^2 \sum \sinα\sinβ + \frac{4r^2R^2}{S}$（其中 r 为内切圆半径）

大家直呼：“卧槽 —— 不对，哇塞！”

大家都觉得这个发现很牛，当何纯赢老师问薛小树怎么想到这个推导时，他不好意思地说：

“其实…… 我只是看错了题目。但当我发现错误时，觉得这个错误比原题有趣多了……”

## 科普：这个发现有多厉害？

**注**：此部分由 AI 生成。

1. **特例验证**：
   - 当 $θ→0$ 时，退化为经典双圆四边形公式
   - 当 $a=b=c=d$ 时，公式简化为正方形面积公式
   - 当 $d→0$ 时，转化为三角形面积的海伦 - 秦九韶公式

2. **实际应用**：
   计算原题中 AD 的长度时，通过数值逼近得到：$θ ≈ 1.231 \text{ rad} (约70.53°) ⇒ x ≈ 5.732$

3. **学界反应**：
   - 该公式与 1987 年印度数学家 Das 的猜想部分相似
   - 但完整形式在已知文献中从未出现
   - 特别令人惊讶的是推导过程仅使用初中三角函数知识
\}

2025年7月13日期 | 浅谈 ege 第一章 入门\{

注意：本篇使用的 IDE 为小熊猫 Dev-C++ (VS 可以走人了，两者可能存在差异)。

### 0 简介

ege.h 是针对 C++ 的图形库，可以帮助 C/C++ 初学者快速上手图形和游戏编程。\
[ege.h 源码](https://www.luogu.me/paste/yugfvphf)。
建议在自动连接中加上以下连接参数 (在部分 Dev-C++ 版本中已经默认设置)：

```
-lgraphics -luuid -lmsimg32 -lgdi32 -limm32 -lole32 -loleaut32 -lwinmm -lgdiplus
```

### 1 约定

### A 坐标

屏幕的坐标呈现以下形式：\
![](https://cdn.luogu.com.cn/upload/image_hosting/sg03ccxe.png)

其中，原点为屏幕左上角。

## 2 入门

接下来就可以开始写第一个 ege 程序了。

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	ege::line(0,0,600,800); //画一条线
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

![](https://cdn.luogu.com.cn/upload/image_hosting/qv5xa7wt.png)注意：

1. 在库文件中，函数所用的命名空间为 `ege`, 所以调用 `ege` 函数前需要 `ege::` 一下。

2. 包含并使用本库时，不要包含 conio.h 头文件。

## 3 正式开始

在啰嗦一大通之后终于开始了。

### A 一些乱七八糟的工具函数

- `Sleep`

#### 用法

```
Sleep(long ms)
```

用来等待 ms 毫秒。
与 `<windows.h>` 的 `Sleep()` 类似。

- `getch`

#### 用法

```cpp
int EGEAPI getch();
```

读取一个字符。与 `<conio.h>` 中的 `getch()` 类似。

目前用来防闪退（不理解的话你可以把上文代码中的 `	ege::getch(); //读取一个字符，防止闪退` 注释掉试试）。

### B 绘图环境函数

- `initgragh`

```cpp
void EGEAPI initgraph(int Width, int Height);        
```

#### 用途

初始化图形环境，即创建窗口。

#### 参数

Width ：窗口宽度。
Height : 窗口高度。

- `closegraph()`

```cpp
void EGEAPI closegraph();                                          
```

#### 用途

关闭图形环境，即关闭窗口。

### C 颜色

- 颜色表示
  表示一个颜色有三种方法：

#### 颜色常量

有以下颜色常量：

```
常量			    值			  颜色
--------		  --------	--------
BLACK			    0			    黑
BLUE			    0xAA0000	蓝
GREEN			    0x00AA00	绿
CYAN			    0xAAAA00	青
RED				    0x0000AA	红
MAGENTA			  0xAA00AA	紫
BROWN			    0x0055AA	棕
LIGHTGRAY		  0xAAAAAA	浅灰
DARKGRAY		  0x555555	深灰
LIGHTBLUE		  0xFF5555	亮蓝
LIGHTGREEN	  0x55FF55	亮绿
LIGHTCYAN		  0xFFFF55	亮青
LIGHTRED		  0x5555FF	亮红
LIGHTMAGENTA  0xFF55FF	亮紫
YELLOW			  0x55FFFF	黄
WHITE			    0xFFFFFF	白

```

#### RGB

如果你不知道 RGB 是什么，可以参见[百度百科](https://baike.baidu.com/item/RGB/342517?fr=aladdin)。

用法如下：

```cpp
EGERGB(r,g,b) //将 RGB 值 分别填入 r,g,b 处
```

注意：此处无需 `ege::`。

#### RGBA

如果你不知道 RGBA 是什么，可以参见[百度百科](https://baike.baidu.com/item/RGBA?fromModule=lemma_search-box)。

用法如下：

```cpp
EGERGBA(r, g, b, a) //将 RGBA 值 分别填入 r,g,b,a 处
```

注意：此处无需 `ege::`。

#### 补充：$0 \le r,g,b,a \le 255$

- `setcolor`

```cpp
void EGEAPI setcolor(color_t color, PIMAGE pimg = NULL);   
```

#### 用途

设置前景色

#### 参数

color：颜色

- `setfillcolor`

```cpp
void EGEAPI setfillcolor(color_t color, PIMAGE pimg = NULL);   
```

#### 用途

设置填充色

#### 参数

color：颜色

- `setbkcolor`

```cpp
void EGEAPI setbkcolor(color_t color, PIMAGE pimg = NULL);   
```

#### 用途

设置当前绘图背景色。

#### 参数

color：颜色

- 实例

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	ege::setbkcolor(EGERGB(0,255,0));  	 //将窗口设置为绿色。
	ege::Sleep(1000);					 //等待1000ms 。	
	ege::setbkcolor(EGERGB(255,0,0));    //将窗口设置为红色。
	ege::Sleep(1000);					 //等待1000ms 。
	ege::setbkcolor(EGERGB(0,0,255));  	 //将窗口设置为蓝色。
	ege::Sleep(1000);  					 //等待1000ms 。
	ege::setbkcolor(EGERGB(255,255,0));  //将窗口设置为黄色。
	ege::Sleep(1000);					 //等待1000ms 。
	ege::setbkcolor(EGERGB(0,255,255));  //将窗口设置为青色。
	ege::Sleep(1000); 					 //等待1000ms 。
	ege::setbkcolor(EGERGB(255,0,255));  //将窗口设置为紫色。
	ege::Sleep(1000);					 //等待1000ms 。
	ege::setbkcolor(EGERGB(255,255,255));//将窗口设置为白色。
	ege::Sleep(1000);	
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

### D 画图函数

- `putpixel`

```cpp
void EGEAPI putpixel  (int x, int y, color_t color, PIMAGE pimg = NULL); 
```

#### 作用

画点。

#### 参数

x,y：点的横纵坐标。
color： 颜色。

#### 实例

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	srand(time(0));
	for(int i=1;i<=600;i+=10)
	{
		for(int j=1;j<=800;j+=10)
		{
			ege::putpixel(i,j,EGERGBA(rand()%256,rand()%256,rand()%256,rand()%256)); //在i,j 点上画一个颜色随机的点。
		}
	}	
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

结果：![](https://cdn.luogu.com.cn/upload/image_hosting/5z3j71pa.png)与实际结果略有不同，诸君可在自家电脑上编译运行一下。

- `line`

```cpp
void EGEAPI line(int x1, int y1, int x2, int y2, PIMAGE pimg = NULL);
```

#### 作用

画线。

#### 参数

x1,y1：线段一个端点的横纵坐标。
x2,y2: 线段另一个端点的横纵坐标。

#### 实例

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	ege::line(0,0,600,800); //画一条线
	ege::setcolor(EGERGB(255,0,0)); //将线段颜色设置为红色
	ege::line(0,800,600,0); //再画一条线
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

结果：![](https://cdn.luogu.com.cn/upload/image_hosting/c9jpmor2.png)

- 圆，圆弧，扇形

```cpp
void EGEAPI arc(int x, int y, int stangle, int endangle, int radius, PIMAGE pimg = NULL);                  // 画圆弧
void EGEAPI circle(int x, int y, int radius, PIMAGE pimg = NULL);                                          // 画圆
void EGEAPI pieslice(int x, int y, int stangle, int endangle, int radius, PIMAGE pimg = NULL);             // 画填充圆扇形
```

#### 作用

见注释，写的很清楚了。

#### 参数

x,y: 圆心坐标
stangle,endangle：圆心角的始边和终边的角度。
radius：半径。

#### 实例

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	ege::setcolor(EGERGB(255,255,0)); //将线段颜色设置为黄色
	ege::setfillcolor(EGERGB(255,255,0)); //设置填充颜色
	ege::circle(100,100,100); //以100,100为圆心，100为半径画圆。
	ege::pieslice(100,300,0,360,100); //画一个实心圆（毕竟圆也算圆心角为360度的扇形。）
	ege::arc(300,300,0,150,100);//画一个弧
	ege::pieslice(500,500,280,350,100); //画一个扇形
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

结果：![](https://cdn.luogu.com.cn/upload/image_hosting/b0wpwywt.png)

- 椭圆，椭圆弧，椭圆扇形

```cpp
void EGEAPI ellipse(int x, int y, int stangle, int endangle, int xradius, int yradius, PIMAGE pimg = NULL);// 画椭圆弧线
void EGEAPI fillellipse(int x, int y, int xradius, int yradius, PIMAGE pimg = NULL);                       // 画填充椭圆
void EGEAPI sector(int x, int y, int stangle, int endangle, int xradius, int yradius, PIMAGE pimg = NULL); // 画填充椭圆扇形
```

#### 作用

不必多说，注释写的很清楚了。

#### 参数

x,y,stangle,endtangle 同上一节圆，圆弧，扇形。
xradius,yradius: 椭圆的水平半径和垂直半径。

#### 实例

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	ege::setcolor(EGERGB(255,255,0)); //将线段颜色设置为黄色
	ege::setfillcolor(EGERGB(255,255,0)); //设置填充颜色
	ege::ellipse(200,100,0,360,200,100); //画一个椭圆
	ege::fillellipse(200,300,200,100); //画一个实心椭圆
	ege::ellipse(200,500,0,150,200,100);//画一个椭圆弧
	ege::sector(200,700,280,350,200,100); //画一个椭圆扇形
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

![](https://cdn.luogu.com.cn/upload/image_hosting/pha7jxsv.png)

- 矩形

```cpp
void EGEAPI bar(int left, int top, int right, int bottom, PIMAGE pimg = NULL);                             // 画无边框填充矩形
void EGEAPI fillrect(int left, int top, int right, int bottom, PIMAGE pimg = NULL);                      //画填充矩形 
```

#### 作用

见注释。

#### 参数

left,right 左端，右端的横坐标
top,bottom 上端，下端的纵坐标

#### 实例

```cpp
#include<bits/stdc++.h>
#include<ege.h> //导入ege.h
using namespace std;
int main()
{
	ege::initgraph(600,800); //初始化窗口
	ege::setcolor(EGERGB(255,0,0)); //将线段颜色设置为红色
	ege::setfillcolor(EGERGB(255,255,0)); //设置填充颜色
	ege::fillrect(0,0,600,800); //画一个填充矩形
	ege::setfillcolor(EGERGB(0,255,255)); // 设置填充颜色
	ege::bar(100,100,500,700); //画一个无边框矩形
	ege::getch(); //读取一个字符，防止闪退
	ege::closegraph(); //关闭窗口
	return 0;
}
```

![](https://cdn.luogu.com.cn/upload/image_hosting/23r8n4sl.png)

---

ege 的学习到此先告一段落，下一章我们讲学习图片，音频，与文本的处理。

完结撒花！

\}

2025年7月9日期 | VScode 配置 C/C++ 环境\{
By ![](https://cdn.luogu.com.cn/upload/usericon/1019968.png)[lijingshu_304775](https://www.luogu.com.cn/user/1019968)
# VScode 配置 C/C++ 环境

众所周知，VScode 是一款非常强大的代码/文本编辑器。至于它为什么强大请看下图。

![](https://cdn.luogu.com.cn/upload/image_hosting/ttrdt8hs.png)

## 卸载 vscode（第一次安装的请跳过）

**注意：网上有些配置教程是错误的，如果你配错了，那么请你按以下步骤彻底卸载。**

1. 第一步找到 vscode 安装路径，双击运行 `unins000.exe` 卸载 vscode。

![](https://cdn.luogu.com.cn/upload/image_hosting/84u1975r.png)

2. 来到 `C:\Users\admin\AppData\Roaming` 其中 `admin` 是你系统用户名，删除 `Code`文件夹。

![](https://cdn.luogu.com.cn/upload/image_hosting/jurgg2th.png)

3. 来到 `C:\Users\admin` 同样 `admin` 是你系统用户名。删除 `.vscode` 文件夹。

![](https://cdn.luogu.com.cn/upload/image_hosting/daq2brd6.png)

恭喜，你完成了第一步卸载 vscode。

## 安装 vscode

这里给出 vscode 官方下载地址：<https://code.visualstudio.com/download>。

选择合适的系统安装即可。

安装过程我就不再赘述了。

## 安装 C/C++ 编译器

这里给出 Mingw64 官方下载地址：<https://www.mingw-w64.org/source/>。

下载后放在 D 盘方便我们后面的处理。

![](https://cdn.luogu.com.cn/upload/image_hosting/pqtnd0cy.png)

这一步这关重要请看仔细了。右键`此电脑`，点击`属性`，点击`高级系统设置`，点击`环境变量`，双击系统变量中的 `Path`，点击`新建`，将 `D:\mingw64\bin`（就是mingw64中的 `bin` 文件夹的路径） 粘进去。保存点三个`确定`即可。

`win+r` 输入 `cmd` 依次输入 `g++ -v`，`gcc -v`，`gdb -v`，看是否保持，如出现 `...不是内部或外部命令，也不是可运行的程序或批处理文件。`那就是你配置有误，请重新配置。

## 配置 vscode

`ctrl+shift+x` 打开扩展，搜索 `C/C++` 扩展并安装。

![](https://cdn.luogu.com.cn/upload/image_hosting/m1u6bmiy.png)



然后打开一个文件夹（**文件夹和内部文件名不得包含中文或全角符号否则报错**），新建一个 cpp 文件，敲出一个 `hello world`，如果你使用万能头报错，那是正常的，配置后就不报错了。

单击菜单栏上的 `Terminal(终端)->Configure Default Build Task` 。随后在跳出的选择方框中点击 **`C/C++: g++.exe build active file`** 以**编译 `helloworld.cpp`** 并创建**可执行文件 `helloworld.exe`**。

这样，我们会发现在左侧的文件夹栏目中出现了 `.vscode` 文件夹，其中含有 **`tasks.json`** 文件，我们打开该文件，并输入如下代码（里面需要修改的地方我写注释里了）：

```json
{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: g++.exe 生成活动文件",
            "command": "D:\\mingw64\\bin\\g++.exe", //这里改成输入你的 g++.exe 路径
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "调试器生成的任务。"
        }
    ],
    "version": "2.0.0"
}
```

接下来，我们进一步进行配置。该配置是针对于程序运行的，点击 **`Run（运行）->Add Configuration（添加配置）`**，这样会在 `.vscode` 文件夹中生成 **`launch.json`** 文件，我们打开并输入如下代码（里面需要修改的地方我写注释里了）：

```json
{
    "configurations": [
    {
        "name": "(gdb) 启动",
        "type": "cppdbg",
        "request": "launch",
        "program": "${fileDirname}\\${fileBasenameNoExtension}.exe",
        "args": [],
        "stopAtEntry": false,
        "cwd": "${fileDirname}",
        "environment": [],
        "externalConsole": false,
        "MIMode": "gdb",
        "miDebuggerPath": "D:/mingw64/bin/gdb.exe",//这里改成输入你的 gdb.exe 路径
        "setupCommands": [
            {
                "description": "为 gdb 启用整齐打印",
                "text": "-enable-pretty-printing",
                "ignoreFailures": true
            },
            {
                "description": "将反汇编风格设置为 Intel",
                "text": "-gdb-set disassembly-flavor intel",
                "ignoreFailures": true
            }
        ],
        "preLaunchTask": "C/C++: g++.exe 生成活动文件"
    }
    ]
}
```

接下来，我们进行最后一项的配置。该配置时针对于C/C++的相关拓展的，我们首先按下 `Ctrl+Shift+P` 以打开全局搜索，输入C/C++并在搜索结果中选择 `C/C++: Edit configurations(UI)`

![](https://cdn.luogu.com.cn/upload/image_hosting/f6ufwg94.png)

![](https://cdn.luogu.com.cn/upload/image_hosting/qxwyi2e1.png)

![](https://cdn.luogu.com.cn/upload/image_hosting/mhu47lbx.png)

ok,现在你可以发现 `.vscode` 文件夹中不知不觉有了一个 `c_cpp_properties.json` 。

现在 vscode 就配置完成了，`Ctrl + F5` (运行) 刚才写的 `helloworld.cpp` 如果下方弹出一个框，过一会，你看到了 `hello world`出现那就说明你配置成功了。你还可以打上断点按下 `F5` 再按下 `ctrl+shift+d` 你就可以在旁边看到调试信息了。

## 推荐的扩展

1. Code Runner

   ![](https://cdn.luogu.com.cn/upload/image_hosting/ryheyjnf.png)

   它可以帮助我们更加方便的一键运行代码快捷键是 `ctrl+alt+n`。

2. Markdown All in One

   ![](https://cdn.luogu.com.cn/upload/image_hosting/l7bc532e.png)
   
   它可以帮助我们更加方便编写 `Markdown`。

## 推荐阅读

1. [Markdown+LaTeX+C++| VS Code 搭建高效学习环境](https://www.luogu.com.cn/article/wm6a900g)

2. [VSCode中那些超棒的功能和插件](https://www.luogu.com.cn/article/m3oxrdoc)

## 参考文献

1. <https://blog.csdn.net/qq_50813669/article/details/124461328> ——CSDN。

2. <https://code.visualstudio.com/docs/cpp/config-mingw> ——vscode官方文档。
\}

2025年7月4日期 | 如何稳定的快速访问 GitHub？\{
# 如何稳定的快速访问GitHub？
By ![](https://cdn.luogu.com.cn/upload/usericon/884813.png)[_luogu_huowenshuo_](https://www.luogu.com.cn/user/884813)
## 前言
https://www.luogu.com.cn/discuss/1092310
## 方法一：修改 hosts 文件
### 性能
推荐值：3 星。

使用难度：1 星。

访问速度：快。

稳定性：过几天就不管用了。
### How？
路径：`C:\Windows\System32\drivers\etc`。
![](https://cdn.luogu.com.cn/upload/image_hosting/bospa2ad.png)
右键一下，点击“打开方式”，这里推荐用 `Visual Studio` 打开。
![](https://cdn.luogu.com.cn/upload/image_hosting/4vzz2eb3.png)
然后，在 `hosts` 文件的结尾添加这一串东西。
```
140.82.112.4 github.com
151.101.1.6 github.global.ssl.fastly.net
185.199.108.153 assets-cdn.github.com
185.199.109.153 assets-cdn.github.com
185.199.110.153 assets-cdn.github.com
185.199.111.153 assets-cdn.github.com
```
像这样：![](https://cdn.luogu.com.cn/upload/image_hosting/f9ed0zql.png)
然后以管理员身份保存，不要管杀毒软件。

最后，如果你是 Windows，打开 `cmd`，输入 `ipconfig /flushdns`，大功告成！

如果你是 Mac，输入 `sudo killall -HUP mDNSResponder`。

如果你是 Linux，输入 `sudo nscd restart`。
![](https://cdn.luogu.com.cn/upload/image_hosting/pb1zkz7x.png)
![](https://cdn.luogu.com.cn/upload/image_hosting/2vaw68zu.png)
### 注意事项

[如果 `GitHub` 再次变慢，请更新 `hosts` 文件。](https://github.com/maxiaof/github-hosts)


## 方法二：下载 
### 性能
推荐值：5 星。

使用难度：0.5 星。

访问速度：快的飞起。

稳定性：非常不错。
### How？
打开我们亲爱的 `Microsoft Store`，搜索 `Watt Toolkit`，下载第一个。

![](https://cdn.luogu.com.cn/upload/image_hosting/35tdsjwk.png)

打开 Watt Toolkit，点击“网站加速”，勾 `Github`，点击“一键加速”，大功告成！
![](https://cdn.luogu.com.cn/upload/image_hosting/h1do45ni.png)
访问速度不错：
![](https://cdn.luogu.com.cn/upload/image_hosting/05eganuq.png)
\}

2025年7月3日期\{
# 2025年7月3日期
By ![](https://cdn.luogu.com.cn/upload/usericon/1240580.png)[Chinese_good_FaFa](https://www.luogu.com.cn/user/1240580)

洛谷民间报成立啦！

## h2
### h3

**加粗**

*斜体*

$abc$

`小代码框`

```cpp
#include<bits/stdc++.h>
using namespace std;
int main(){
    
    return 0;
}
```
\}
